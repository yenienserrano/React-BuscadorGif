{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","InputValue","setInputValue","onSubmit","e","preventDefault","length","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAa,SAAAK,GAAC,OAAMH,GAAN,mBAAqBG,OACnCF,EAAc,MAKlB,SACI,uBACIK,KAAK,OACLC,MAAQP,EACRQ,SAnBc,SAAEL,GAExBF,EAAeE,EAAEM,OAAOF,a,+BCRnBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,0DAC8CC,UAAWH,GADzD,sDAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAH,sDCENO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EAEbZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAkBvC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGtB,CAAEpB,IAGEqB,EDTmBI,CAAazB,GAA/BO,EAR6B,EAQ7BA,KAAMa,EARuB,EAQvBA,QAKd,OACI,qCACC,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,6CAAf,SACIT,EAAKE,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEIXe,EAxBM,WAAO,IAAD,EAEWtC,mBAAU,CAAC,cAFtB,mBAEhBuC,EAFgB,KAEJxC,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAcA,IAC3B,uBAEA,6BAEQwC,EAAWlB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEHA,SAAWA,GADLA,Y,MCZlC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.528740f6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategory } ) => {\r\n\r\n    const [InputValue, setInputValue] = useState('')\r\n    const handleInputChange = ( e ) => {\r\n\r\n        setInputValue( e.target.value )\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if( InputValue.length > 2){\r\n            setCategory( e => [ InputValue, ...e ] )\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ InputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGif = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category ) }&api_key=2luNZLuWNs1WoNPcaq84jIa1ZmsCxBRB`\r\n    const resp = await fetch( url )\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        } \r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    /* \r\n        useEffect(() => {\r\n            getGif( category ).then( setImages )\r\n        }, [ category ])\r\n\r\n    const [images, setImages] = useState([]) */\r\n\r\n    const { data, loading } = useFetchGif( category )\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3> \r\n\r\n         { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n         {<div className=\"cardGrid animate__animated animate__fadeIn\">\r\n            { data.map( img =>(\r\n                <GifGridItem\r\n                key={ img.id }\r\n                { ...img } \r\n                />\r\n                )\r\n            ) \r\n            }\r\n         </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGif( category )\r\n            .then( img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false \r\n                })\r\n            })\r\n    }, [ category ])\r\n\r\n\r\n    return state \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategory] = useState( ['One Punch'] )\r\n\r\n    return( \r\n        <>\r\n            <h2>GifExpertApp</h2> \r\n            <AddCategory setCategory={ setCategory }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}